{"version":3,"sources":["Settings.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;AAEb,OAAO,CAAC,cAAc,CAAC,CAAC;;AAExB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEzB,MAAM,YAAY,GAAG,gBAAgB,CAAC;AACtC,MAAM,qBAAqB,GAAG,iBAAiB,CAAC;AAChD,MAAM,2BAA2B,GAAG,uBAAuB,CAAC;;AAE5D,MAAM,yBAAyB,GAAG,2BAA2B,CAAC;AAC9D,MAAM,+BAA+B,GAAG,EAAE,CAAC;;IAErC,QAAQ;AAED,WAFP,QAAQ,CAEA,aAAa,EAAE,OAAO,EAAE;0BAFhC,QAAQ;;AAGV,QAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CACjC,aAAa,EACb,OAAO,CAAC,qBAAqB,CAAC,IAAI,yBAAyB,CAC5D,CAAC;AACF,QAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,CACvC,aAAa,EACb,OAAO,CAAC,2BAA2B,CAAC,IAAI,+BAA+B,CACxE,CAAC;GACH;;;;;;;eAZG,QAAQ;;6BAkBU,aAAG;AACvB,UAAI,aAAa,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAClC,UAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;AAClE,UAAI,WAAW,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AACrE,UAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACvC,UAAI,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC3C,aAAO,IAAI,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;KAC7C;;;SAzBG,QAAQ;;;qBA4BC,QAAQ","file":"Settings.js","sourcesContent":["'use strict';\n\nrequire('instapromise');\n\nconst path = require('path');\nconst fs = require('fs');\n\nconst SETTINGS_KEY = 'reactNativeApp';\nconst REACT_NATIVE_PATH_KEY = 'reactNativePath';\nconst XCODE_PROJECT_DIRECTORY_KEY = 'xcodeProjectDirectory';\n\nconst DEFAULT_REACT_NATIVE_PATH = 'node_modules/react-native';\nconst DEFAULT_XCODE_PROJECT_DIRECTORY = '';\n\nclass Settings {\n\n  constructor(baseDirectory, options) {\n    this.baseDirectory = baseDirectory;\n    this.reactNativePath = path.resolve(\n      baseDirectory,\n      options[REACT_NATIVE_PATH_KEY] || DEFAULT_REACT_NATIVE_PATH\n    );\n    this.xcodeProjectDirectory = path.resolve(\n      baseDirectory,\n      options[XCODE_PROJECT_DIRECTORY_KEY] || DEFAULT_XCODE_PROJECT_DIRECTORY\n    );\n  }\n\n  /**\n   * Loads the configuration settings from the package.json file in the current\n   * working directory.\n   */\n  static async loadAsync() {\n    let baseDirectory = process.cwd();\n    let packageJSONPath = path.resolve(baseDirectory, 'package.json');\n    let packageJSON = await fs.promise.readFile(packageJSONPath, 'utf8');\n    let manifest = JSON.parse(packageJSON);\n    let options = manifest[SETTINGS_KEY] || {};\n    return new Settings(baseDirectory, options);\n  }\n}\n\nexport default Settings;\n"],"sourceRoot":"/source/"}