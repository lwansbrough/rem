{"version":3,"sources":["Settings.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;AAEb,OAAO,CAAC,cAAc,CAAC,CAAC;;AAExB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEzB,MAAM,YAAY,GAAG,KAAK,CAAC;AAC3B,MAAM,qBAAqB,GAAG,iBAAiB,CAAC;AAChD,MAAM,cAAc,GAAG,QAAQ,CAAC;;AAEhC,MAAM,wBAAwB,GAAG,WAAW,CAAC;AAC7C,MAAM,oBAAoB,GAAG,OAAO,CAAC;AACrC,MAAM,6BAA6B,GAAG,2BAA2B,CAAC;AAClE,MAAM,gCAAgC,GAAG,iBAAiB,CAAC;;IAErD,QAAQ;AAED,WAFP,QAAQ,CAEA,aAAa,EAAE,QAAQ,EAAE;0BAFjC,QAAQ;;AAGV,QAAI,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC3C,QAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;AACpB,QAAI,CAAC,YAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1C,QAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CACjC,aAAa,EACb,OAAO,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,QAAQ,GAAG,gCAAgC,GAAG,6BAA6B,CAAA,AAAC,CACrH,CAAC;GACH;;eAZG,QAAQ;;WAciB,kCAAG;;;AAC9B,+CACG,cAAc,EAAG,IAAI,yBACrB,qBAAqB,EAAG,gCAAgC,8CACtC;AACjB,eAAO,EAAE,wBAAwB;AACjC,WAAG,EAAE,oBAAoB;OAC1B,SACF;KACF;;;;;;;;6BAMqB,aAAG;AACvB,UAAI,aAAa,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AAClC,UAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;AAClE,UAAI,WAAW,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AACrE,UAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACvC,aAAO,IAAI,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;KAC9C;;;SAnCG,QAAQ;;;qBAsCC,QAAQ","file":"Settings.js","sourcesContent":["'use strict';\n\nrequire('instapromise');\n\nconst path = require('path');\nconst fs = require('fs');\n\nconst SETTINGS_KEY = 'rem';\nconst REACT_NATIVE_PATH_KEY = 'reactNativePath';\nconst REM_MODULE_KEY = 'module';\n\nconst APP_DEFAULT_ANDROID_PATH = './android';\nconst APP_DEFAULT_IOS_PATH = './ios';\nconst APP_DEFAULT_REACT_NATIVE_PATH = 'node_modules/react-native';\nconst MODULE_DEFAULT_REACT_NATIVE_PATH = '../react-native';\n\nclass Settings {\n\n  constructor(baseDirectory, manifest) {\n    let options = manifest[SETTINGS_KEY] || {};\n    this.npm = manifest;\n    this.isRemEnabled = !!manifest[SETTINGS_KEY];\n    this.isModule = !!options[REM_MODULE_KEY];\n    this.baseDirectory = baseDirectory;\n    this.reactNativePath = path.resolve(\n      baseDirectory,\n      options[REACT_NATIVE_PATH_KEY] || (this.isModule ? MODULE_DEFAULT_REACT_NATIVE_PATH : APP_DEFAULT_REACT_NATIVE_PATH)\n    );\n  }\n  \n  static generateModuleSettings() {\n    return {\n      [REM_MODULE_KEY]: true,\n      [REACT_NATIVE_PATH_KEY]: MODULE_DEFAULT_REACT_NATIVE_PATH,\n      targetDirectories: {\n        android: APP_DEFAULT_ANDROID_PATH,\n        ios: APP_DEFAULT_IOS_PATH\n      }\n    }\n  }\n\n  /**\n   * Loads the configuration settings from the package.json file in the current\n   * working directory.\n   */\n  static async loadAsync() {\n    let baseDirectory = process.cwd();\n    let packageJSONPath = path.resolve(baseDirectory, 'package.json');\n    let packageJSON = await fs.promise.readFile(packageJSONPath, 'utf8');\n    let manifest = JSON.parse(packageJSON);\n    return new Settings(baseDirectory, manifest);\n  }\n}\n\nexport default Settings;"],"sourceRoot":"/source/"}